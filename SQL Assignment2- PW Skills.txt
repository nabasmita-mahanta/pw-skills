/* ASSIGNMENT SUBMITTED BY NABASMITA MAHANTA
   ASSIGNMENT NAME - SQL ASSIGNMENT 2
*/
use sakila;
-- Basic Aggregate Functions: 
-- Question 1: Retrieve the total number of rentals made in the Sakila database. 
-- Hint: Use the COUNT() function. 
select count(rental_id) from rental;

-- Question 2: Find the average rental duration (in days) of movies rented from the Sakila database.
-- Hint: Utilize the AVG() function. 
select avg(rental_duration) from film;

-- String Functions: 
-- Question 3: Display the first name and last name of customers in uppercase. 
-- Hint: Use the UPPER () function. 
select upper(first_name), upper(last_name) from customer;

-- Question 4: Extract the month from the rental date and display it alongside the rental ID. 
-- Hint: Employ the MONTH() function. 
select rental_id, month(rental_date) as month from rental;

-- GROUP BY:
-- Question 5: Retrieve the count of rentals for each customer (display customer ID and the count of rentals). 
-- Hint: Use COUNT () in conjunction with GROUP BY.
select customer_id, count(rental_id) from rental group by customer_id;

-- Question 6: Find the total revenue generated by each store. 
-- Hint: Combine SUM() and GROUP BY. 
select * from payment;
select sum(amount), store_id from payment p join customer c on p.customer_id = c.customer_id group by store_id;

-- Joins:
-- Question 7:Display the title of the movie, customer's first name, and last name who rented it.
-- Hint: Use JOIN between the film, inventory, rental, and customer tables.

select * from film;-- title
select * from customer;-- first_name,last_name
select * from rental; -- rental_id
select * from inventory;

SELECT 
    f.title, c.first_name, c.last_name
FROM
    film f
        JOIN
    inventory i ON f.film_id = i.film_id
        JOIN
    rental r ON r.inventory_id = i.inventory_id
        JOIN
    customer c ON c.customer_id = r.customer_id;


-- Question 8: Retrieve the names of all actors who have appeared in the film "Gone with the Wind." 
-- Hint: Use JOIN between the film actor, film, and actor tables. 

select * from film_actor;
select * from actor;
select * from film;

SELECT 
    a.first_name,a.last_name
FROM
    actor a
        JOIN
    film_actor fa ON a.actor_id = fa.actor_id
        JOIN
    film f ON f.film_id = fa.film_id  
WHERE
    title = 'GONE WITH THE WIND';
    
-- GROUP BY: 
-- Question 1: Determine the total number of rentals for each category of movies. 
-- Hint: JOIN film_category, film, and rental tables, then use cOUNT () and GROUP BY. 

select * from film_category; -- film_id , category_id
select * from film;-- film_id
select * from rental;-- rental_id, inventory_id, customer_id, staff_id
select * from inventory; -- inventory_id, film_id
SELECT 
    fc.category_id, COUNT(r.rental_id)
FROM
    film_category fc
        JOIN
    film f ON f.film_id = fc.film_id
        JOIN
    inventory i ON i.film_id = f.film_id
        JOIN
    rental r ON r.inventory_id = i.inventory_id
GROUP BY fc.category_id;

-- Question 2: Find the average rental rate of movies in each language. 
-- Hint: JOIN film and language tables, then use AVG () and GROUP BY. 

select * from language; -- language_id
select * from film; -- film_id, language_id

select avg(f.rental_rate), l.name from film f join language l on f.language_id=l.language_id group by l.name;

-- Joins:
-- Question 3: Retrieve the customer names along with the total amount they've spent on rentals. 
-- Hint: JOIN customer, payment, and rental tables, then use SUM() and GROUP BY. 

select * from customer;
select * from payment;
select * from rental;

SELECT 
    c.first_name,
    c.last_name,
    SUM(p.amount) AS amount
FROM
    customer c
        JOIN
    rental r ON c.customer_id = r.customer_id
        JOIN
    payment p ON p.customer_id = c.customer_id
GROUP BY c.customer_id;

-- Question 4: List the titles of movies rented by each customer in a particular city (e.g., 'London'). 
-- Hint: JOIN customer, address, city, rental, inventory, and film tables, then use GROUP BY.

select * from customer;
select * from address;
select * from city;
select * from rental;
select * from inventory;
select * from film; 

SELECT 
    c.customer_id, c.first_name, c.last_name, f.title, ci.city
FROM
    customer c
        JOIN
    address a ON a.address_id = c.address_id
        JOIN
    city ci ON ci.city_id = a.city_id
        JOIN
    rental r ON r.customer_id = c.customer_id
        JOIN
    inventory i ON i.inventory_id = r.inventory_id
        JOIN
    film f ON f.film_id = i.film_id
where ci.city = 'London';

-- Advanced Joins and GROUP BY: 
-- Question 5: Display the top 5 rented movies along with the number of times they've been rented. 
-- Hint: JOIN film, inventory, and rental tables, then use cOUNT() and GROUP BY, and limit the results. 

SELECT 
     f.title, count(r.rental_id) as rental_orders
FROM
    film f
        JOIN
    inventory i ON i.film_id = f.film_id
        JOIN
    rental r ON r.inventory_id = i.inventory_id
GROUP BY f.title order by rental_orders desc limit 5;

-- Question 6: Determine the customers who have rented movies from both stores (store ID 1 and store ID 2). 
-- Hint: Use JOINS with rental, inventory, and customer tables and consider COUNT() and GROUP BY. 

SELECT 
    c.customer_id, c.first_name, c.last_name, s.store_id
FROM
    customer c
        JOIN
    rental r ON c.customer_id = r.customer_id
        JOIN
    inventory i ON r.inventory_id = i.inventory_id
        JOIN
    store s ON i.store_id = s.store_id
WHERE
    s.store_id IN (1 , 2)
GROUP BY c.customer_id , c.first_name , c.last_name
HAVING COUNT(DISTINCT s.store_id) = 2;
